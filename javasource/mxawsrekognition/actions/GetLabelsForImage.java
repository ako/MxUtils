// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mxawsrekognition.actions;

import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.regions.Region;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.rekognition.AmazonRekognitionClient;
import com.amazonaws.services.rekognition.model.*;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class GetLabelsForImage extends CustomJavaAction<java.lang.String>
{
	private java.lang.String AwsAccessKeyId;
	private java.lang.String AwsSecretAccessKey;
	private java.lang.String AwsRegion;
	private java.lang.String Bucket;
	private java.lang.String Key;

	public GetLabelsForImage(IContext context, java.lang.String AwsAccessKeyId, java.lang.String AwsSecretAccessKey, java.lang.String AwsRegion, java.lang.String Bucket, java.lang.String Key)
	{
		super(context);
		this.AwsAccessKeyId = AwsAccessKeyId;
		this.AwsSecretAccessKey = AwsSecretAccessKey;
		this.AwsRegion = AwsRegion;
		this.Bucket = Bucket;
		this.Key = Key;
	}

	@Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		logger.info(String.format("executeAction - bucket: %s, key: %s, region: %s", this.Bucket, this.Key, this.AwsRegion));

		String labels = "";
        AWSCredentials credentials = new BasicAWSCredentials(AwsAccessKeyId, AwsSecretAccessKey);
        DetectLabelsRequest request = new DetectLabelsRequest()
                .withImage(new Image().withS3Object(new S3Object().withName(this.Key).withBucket(this.Bucket)))
                .withMaxLabels(10)
                .withMinConfidence(80F);

        AmazonRekognitionClient rekognitionClient = new AmazonRekognitionClient(credentials)
                .withRegion(Region.getRegion(Regions.fromName(this.AwsRegion)));

        DetectLabelsResult result = rekognitionClient.detectLabels(request);
        logger.info(String.format("detect labels result: %s, %s", result.getLabels().toString(),result.toString()));
        for (Label label : result.getLabels()) {
            logger.info(label.getName() + " : " + label.getConfidence());
            labels += "{\"label\":\"" + label.getName() + "\"," +
					  "\"confidence\":\"" + label.getConfidence() + "\"},";
        }
		labels = "[" + (labels.equals("") ? "" : labels.substring(0,labels.length() - 1)) + "]";
        return labels ;

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "GetLabelsForImage";
	}

	// BEGIN EXTRA CODE
    private final ILogNode logger = Core.getLogger("AwsRekognition");
	// END EXTRA CODE
}
