// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package main.proxies;

public class SensorTimeseries
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject sensorTimeseriesMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Main.SensorTimeseries";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Timestamp("Timestamp"),
		TimestampReceived("TimestampReceived"),
		Temperature("Temperature"),
		Humidity("Humidity");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SensorTimeseries(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Main.SensorTimeseries"));
	}

	protected SensorTimeseries(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject sensorTimeseriesMendixObject)
	{
		if (sensorTimeseriesMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Main.SensorTimeseries", sensorTimeseriesMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Main.SensorTimeseries");

		this.sensorTimeseriesMendixObject = sensorTimeseriesMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SensorTimeseries.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static main.proxies.SensorTimeseries initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return main.proxies.SensorTimeseries.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static main.proxies.SensorTimeseries initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new main.proxies.SensorTimeseries(context, mendixObject);
	}

	public static main.proxies.SensorTimeseries load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return main.proxies.SensorTimeseries.initialize(context, mendixObject);
	}

	public static java.util.List<main.proxies.SensorTimeseries> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<main.proxies.SensorTimeseries> result = new java.util.ArrayList<main.proxies.SensorTimeseries>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Main.SensorTimeseries" + xpathConstraint))
			result.add(main.proxies.SensorTimeseries.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Timestamp
	 */
	public final Long getTimestamp()
	{
		return getTimestamp(getContext());
	}

	/**
	 * @param context
	 * @return value of Timestamp
	 */
	public final Long getTimestamp(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (Long) getMendixObject().getValue(context, MemberNames.Timestamp.toString());
	}

	/**
	 * Set value of Timestamp
	 * @param timestamp
	 */
	public final void setTimestamp(Long timestamp)
	{
		setTimestamp(getContext(), timestamp);
	}

	/**
	 * Set value of Timestamp
	 * @param context
	 * @param timestamp
	 */
	public final void setTimestamp(com.mendix.systemwideinterfaces.core.IContext context, Long timestamp)
	{
		getMendixObject().setValue(context, MemberNames.Timestamp.toString(), timestamp);
	}

	/**
	 * @return value of TimestampReceived
	 */
	public final java.util.Date getTimestampReceived()
	{
		return getTimestampReceived(getContext());
	}

	/**
	 * @param context
	 * @return value of TimestampReceived
	 */
	public final java.util.Date getTimestampReceived(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.TimestampReceived.toString());
	}

	/**
	 * Set value of TimestampReceived
	 * @param timestampreceived
	 */
	public final void setTimestampReceived(java.util.Date timestampreceived)
	{
		setTimestampReceived(getContext(), timestampreceived);
	}

	/**
	 * Set value of TimestampReceived
	 * @param context
	 * @param timestampreceived
	 */
	public final void setTimestampReceived(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date timestampreceived)
	{
		getMendixObject().setValue(context, MemberNames.TimestampReceived.toString(), timestampreceived);
	}

	/**
	 * @return value of Temperature
	 */
	public final java.math.BigDecimal getTemperature()
	{
		return getTemperature(getContext());
	}

	/**
	 * @param context
	 * @return value of Temperature
	 */
	public final java.math.BigDecimal getTemperature(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Temperature.toString());
	}

	/**
	 * Set value of Temperature
	 * @param temperature
	 */
	public final void setTemperature(java.math.BigDecimal temperature)
	{
		setTemperature(getContext(), temperature);
	}

	/**
	 * Set value of Temperature
	 * @param context
	 * @param temperature
	 */
	public final void setTemperature(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal temperature)
	{
		getMendixObject().setValue(context, MemberNames.Temperature.toString(), temperature);
	}

	/**
	 * @return value of Humidity
	 */
	public final Integer getHumidity()
	{
		return getHumidity(getContext());
	}

	/**
	 * @param context
	 * @return value of Humidity
	 */
	public final Integer getHumidity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (Integer) getMendixObject().getValue(context, MemberNames.Humidity.toString());
	}

	/**
	 * Set value of Humidity
	 * @param humidity
	 */
	public final void setHumidity(Integer humidity)
	{
		setHumidity(getContext(), humidity);
	}

	/**
	 * Set value of Humidity
	 * @param context
	 * @param humidity
	 */
	public final void setHumidity(com.mendix.systemwideinterfaces.core.IContext context, Integer humidity)
	{
		getMendixObject().setValue(context, MemberNames.Humidity.toString(), humidity);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return sensorTimeseriesMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final main.proxies.SensorTimeseries that = (main.proxies.SensorTimeseries) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Main.SensorTimeseries";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
