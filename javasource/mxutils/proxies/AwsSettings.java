// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mxutils.proxies;

public class AwsSettings
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject awsSettingsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MxUtils.AwsSettings";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		account_id("account_id"),
		aws_access_key_id("aws_access_key_id"),
		aws_secret_access_key("aws_secret_access_key"),
		aws_region("aws_region");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AwsSettings(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MxUtils.AwsSettings"));
	}

	protected AwsSettings(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject awsSettingsMendixObject)
	{
		if (awsSettingsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MxUtils.AwsSettings", awsSettingsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MxUtils.AwsSettings");

		this.awsSettingsMendixObject = awsSettingsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'AwsSettings.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static mxutils.proxies.AwsSettings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return mxutils.proxies.AwsSettings.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static mxutils.proxies.AwsSettings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mxutils.proxies.AwsSettings(context, mendixObject);
	}

	public static mxutils.proxies.AwsSettings load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mxutils.proxies.AwsSettings.initialize(context, mendixObject);
	}

	public static java.util.List<mxutils.proxies.AwsSettings> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<mxutils.proxies.AwsSettings> result = new java.util.ArrayList<mxutils.proxies.AwsSettings>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MxUtils.AwsSettings" + xpathConstraint))
			result.add(mxutils.proxies.AwsSettings.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of account_id
	 */
	public final java.lang.String getaccount_id()
	{
		return getaccount_id(getContext());
	}

	/**
	 * @param context
	 * @return value of account_id
	 */
	public final java.lang.String getaccount_id(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.account_id.toString());
	}

	/**
	 * Set value of account_id
	 * @param account_id
	 */
	public final void setaccount_id(java.lang.String account_id)
	{
		setaccount_id(getContext(), account_id);
	}

	/**
	 * Set value of account_id
	 * @param context
	 * @param account_id
	 */
	public final void setaccount_id(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String account_id)
	{
		getMendixObject().setValue(context, MemberNames.account_id.toString(), account_id);
	}

	/**
	 * @return value of aws_access_key_id
	 */
	public final java.lang.String getaws_access_key_id()
	{
		return getaws_access_key_id(getContext());
	}

	/**
	 * @param context
	 * @return value of aws_access_key_id
	 */
	public final java.lang.String getaws_access_key_id(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.aws_access_key_id.toString());
	}

	/**
	 * Set value of aws_access_key_id
	 * @param aws_access_key_id
	 */
	public final void setaws_access_key_id(java.lang.String aws_access_key_id)
	{
		setaws_access_key_id(getContext(), aws_access_key_id);
	}

	/**
	 * Set value of aws_access_key_id
	 * @param context
	 * @param aws_access_key_id
	 */
	public final void setaws_access_key_id(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String aws_access_key_id)
	{
		getMendixObject().setValue(context, MemberNames.aws_access_key_id.toString(), aws_access_key_id);
	}

	/**
	 * @return value of aws_secret_access_key
	 */
	public final java.lang.String getaws_secret_access_key()
	{
		return getaws_secret_access_key(getContext());
	}

	/**
	 * @param context
	 * @return value of aws_secret_access_key
	 */
	public final java.lang.String getaws_secret_access_key(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.aws_secret_access_key.toString());
	}

	/**
	 * Set value of aws_secret_access_key
	 * @param aws_secret_access_key
	 */
	public final void setaws_secret_access_key(java.lang.String aws_secret_access_key)
	{
		setaws_secret_access_key(getContext(), aws_secret_access_key);
	}

	/**
	 * Set value of aws_secret_access_key
	 * @param context
	 * @param aws_secret_access_key
	 */
	public final void setaws_secret_access_key(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String aws_secret_access_key)
	{
		getMendixObject().setValue(context, MemberNames.aws_secret_access_key.toString(), aws_secret_access_key);
	}

	/**
	 * @return value of aws_region
	 */
	public final java.lang.String getaws_region()
	{
		return getaws_region(getContext());
	}

	/**
	 * @param context
	 * @return value of aws_region
	 */
	public final java.lang.String getaws_region(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.aws_region.toString());
	}

	/**
	 * Set value of aws_region
	 * @param aws_region
	 */
	public final void setaws_region(java.lang.String aws_region)
	{
		setaws_region(getContext(), aws_region);
	}

	/**
	 * Set value of aws_region
	 * @param context
	 * @param aws_region
	 */
	public final void setaws_region(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String aws_region)
	{
		getMendixObject().setValue(context, MemberNames.aws_region.toString(), aws_region);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return awsSettingsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mxutils.proxies.AwsSettings that = (mxutils.proxies.AwsSettings) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MxUtils.AwsSettings";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
